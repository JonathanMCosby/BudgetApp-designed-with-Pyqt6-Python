# Form implementation generated from reading ui file '/Users/benjicosby/Desktop/improveBudgetApp/signInWindow.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

import mysql.connector
from mysql.connector import errorcode
from PyQt6 import QtCore, QtGui, QtWidgets
from signUpWindow_ui import Ui_signUpWindow
from budgetWindow_ui import Ui_budgetWindow
from invalidUserWindow_ui import Ui_invalidUserWindow
import sys

class Ui_signInWindow(object):
    def setupUi(self, signInWindow):
        signInWindow.setObjectName("signInWindow")
        signInWindow.resize(680, 618)
        signInWindow.setStyleSheet("background-color: qlineargradient(spread:pad, x1:1, y1:1, x2:1, y2:0, stop:0.311828 rgba(118, 255, 163, 252), stop:0.688172 rgba(65, 183, 60, 255));")
        self.centralwidget = QtWidgets.QWidget(parent=signInWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.titleLbl = QtWidgets.QLabel(parent=self.centralwidget)
        self.titleLbl.setGeometry(QtCore.QRect(180, 50, 341, 61))
        self.titleLbl.setLayoutDirection(QtCore.Qt.LayoutDirection.RightToLeft)
        self.titleLbl.setStyleSheet("background-color: rgb(118,255,163) ;\n"
"font-size: 32px;\n"
"font: italic bold;\n"
"color: rgb(65,183,60);\n"
"padding-left: 15px;\n"
"padding-right: 15px;\n"
"border-radius: 25px")
        self.titleLbl.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.titleLbl.setObjectName("titleLbl")
        self.signLbl = QtWidgets.QLabel(parent=self.centralwidget)
        self.signLbl.setGeometry(QtCore.QRect(270, 120, 161, 61))
        self.signLbl.setLayoutDirection(QtCore.Qt.LayoutDirection.RightToLeft)
        self.signLbl.setStyleSheet("background-color: rgb(118,255,163) ;\n"
"font-size: 24px;\n"
"font: italic bold;\n"
"color: rgb(65,183,60);\n"
"padding-left: 15px;\n"
"padding-right: 15px;\n"
"border-radius: 25px;")
        self.signLbl.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.signLbl.setObjectName("signLbl")
        self.userLbl = QtWidgets.QLabel(parent=self.centralwidget)
        self.userLbl.setGeometry(QtCore.QRect(120, 200, 161, 61))
        self.userLbl.setLayoutDirection(QtCore.Qt.LayoutDirection.RightToLeft)
        self.userLbl.setStyleSheet("background-color: rgb(118,255,163);\n"
"font-size: 24px;\n"
"font: italic bold;\n"
"color: rgb(65,183,60);\n"
"padding-left: 15px;\n"
"padding-right: 15px;\n"
"border-radius: 25px;")
        self.userLbl.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.userLbl.setObjectName("userLbl")
        self.userLine = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.userLine.setGeometry(QtCore.QRect(300, 200, 281, 61))
        self.userLine.setStyleSheet("background-color: rgb(255,255,255);\n"
"border-radius: 25px;\n"
"color: rgb(0,0,0);\n"
"font-size: 20px;\n"
"font: italic bold;")
        self.userLine.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.userLine.setObjectName("userLine")
        self.passwordLbl = QtWidgets.QLabel(parent=self.centralwidget)
        self.passwordLbl.setGeometry(QtCore.QRect(120, 290, 161, 61))
        self.passwordLbl.setLayoutDirection(QtCore.Qt.LayoutDirection.RightToLeft)
        self.passwordLbl.setStyleSheet("background-color: rgb(118,255,163);\n"
"font-size: 24px;\n"
"font: italic bold;\n"
"color: rgb(65,183,60);\n"
"padding-left: 15px;\n"
"padding-right: 15px;\n"
"border-radius: 25px;")
        self.passwordLbl.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.passwordLbl.setObjectName("passwordLbl")
        self.passwordLine = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.passwordLine.setGeometry(QtCore.QRect(300, 290, 281, 61))
        self.passwordLine.setStyleSheet("background-color: rgb(255,255,255);\n"
"border-radius: 25px;\n"
"color: rgb(0,0,0);\n"
"font-size: 20px;\n"
"font: italic bold;")
        self.passwordLine.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.passwordLine.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.passwordLine.setObjectName("passwordLine")
        self.enterBtn = QtWidgets.QPushButton(parent=self.centralwidget)
        self.enterBtn.setGeometry(QtCore.QRect(190, 360, 121, 51))
        self.enterBtn.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.enterBtn.setAutoFillBackground(False)
        self.enterBtn.setStyleSheet("background-color: rgb(65,183,60);\n"
"font: italic bold;\n"
"color: rgb(118,255,163);\n"
"font-size: 20px;\n"
"border-radius: 15px;\n"
"")
        self.enterBtn.setAutoDefault(True)
        self.enterBtn.setDefault(True)
        self.enterBtn.setObjectName("enterBtn")
        self.signUpBtn = QtWidgets.QPushButton(parent=self.centralwidget)
        self.signUpBtn.setGeometry(QtCore.QRect(250, 430, 171, 51))
        self.signUpBtn.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.signUpBtn.setStyleSheet("background-color: rgb(65,183,60);\n"
"font: italic bold;\n"
"color: rgb(118,255,163);\n"
"font-size: 20px;\n"
"border-radius: 15px;\n"
"")
        self.signUpBtn.setObjectName("signUpBtn")
        self.exitBtn = QtWidgets.QPushButton(parent=self.centralwidget)
        self.exitBtn.setGeometry(QtCore.QRect(350, 360, 121, 51))
        self.exitBtn.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.exitBtn.setStyleSheet("background-color: rgb(65,183,60);\n"
"font: italic bold;\n"
"color: rgb(118,255,163);\n"
"font-size: 20px;\n"
"border-radius: 15px;\n"
"")
        self.exitBtn.setObjectName("exitBtn")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(520, 10, 161, 16))
        self.label.setStyleSheet("background-color: none;\n"
"color: rgb(255,255,255);")
        self.label.setObjectName("label")
        signInWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=signInWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 680, 21))
        self.menubar.setObjectName("menubar")
        signInWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=signInWindow)
        self.statusbar.setObjectName("statusbar")
        signInWindow.setStatusBar(self.statusbar)

        self.retranslateUi(signInWindow)
        QtCore.QMetaObject.connectSlotsByName(signInWindow)

    def retranslateUi(self, signInWindow):
        _translate = QtCore.QCoreApplication.translate
        signInWindow.setWindowTitle(_translate("signInWindow", "MainWindow"))
        self.titleLbl.setText(_translate("signInWindow", "BudgetApp"))
        self.signLbl.setText(_translate("signInWindow", "Sign In"))
        self.userLbl.setText(_translate("signInWindow", "User Name"))
        self.userLine.setPlaceholderText(_translate("signInWindow", "User Name"))
        self.passwordLbl.setText(_translate("signInWindow", "Password"))
        self.passwordLine.setPlaceholderText(_translate("signInWindow", "Password"))
        self.enterBtn.setText(_translate("signInWindow", "Enter"))
        self.signUpBtn.setText(_translate("signInWindow", "Sign Up"))
        self.exitBtn.setText(_translate("signInWindow", "Exit"))
        self.label.setText(_translate("signInWindow", "Made By: Jonathan Cosby"))



class budgetApp(Ui_signInWindow):
    def exit(self):
        sys.exit()
    def enter(self):
        try:
            my_connection = mysql.connector.connect(
                user = "root",
                password = "Kteasley",
                host = "localhost",
                database = "budgetProgram"
    )
        except mysql.connector.Error as err:
            if err.errno == errorcode.ER_ACCESS_DENIED_ERROR:
                print("Invaild credentials")
                if err.errno == errorcode.ER_BAD_DB_ERROR:
                    print("No database available")
                else:
                    print("Error occured", err)
        else:
            print('Connection Successful')
            #Create a cursor from the connection
            user_cursor = my_connection.cursor()
            table_cursor = my_connection.cursor()
            userNameLine = self.userLine.text()
            passwordLine = self.passwordLine.text()
            query = "SELECT * FROM user WHERE user_name = %s AND password = %s"
            user_cursor.execute(query, (userNameLine, passwordLine))
            result = user_cursor.fetchone()

            query = "SELECT date FROM budgetProgram.table WHERE user_name = %s ORDER BY date DESC LIMIT 1; "
            table_cursor.execute(query, [userNameLine])
            lastDate = table_cursor.fetchone()
            if lastDate:
                lastDateDisplay = "Last Entry Date: " + lastDate[0].strftime("%Y-%m-%d")
            else:
                lastDateDisplay = "Last Entry Date: None"

            query = "SELECT total_income FROM budgetProgram.table WHERE user_name = %s ORDER BY date DESC LIMIT 1; "
            table_cursor.execute(query, [userNameLine])
            lastIncome = (table_cursor.fetchone())
            if lastIncome:
                lastIncomeDisplay = "Last Total Income: " + "{:.2f}".format(lastIncome[0])
            else:
                lastIncomeDisplay = "Last Total Income: None"

            if result:
                self.budgetWindow = QtWidgets.QMainWindow()
                self.budgetUi = Ui_budgetWindow()
                self.budgetUi.setupUi(self.budgetWindow)
                self.budgetWindow.show()
                self.budgetUi.titleLbl.setText(userNameLine)
                self.budgetUi.lastEntryDateLbl.setText(lastDateDisplay)
                self.budgetUi.lastIncomeLbl.setText(lastIncomeDisplay)


            else:
                self.invalidUser = QtWidgets.QMainWindow()
                self.invalidUserUi = Ui_invalidUserWindow()
                self.invalidUserUi.setupUi(self.invalidUser)
                self.invalidUser.show()

            my_connection.commit()
            my_connection.close()
            


    def __init__(self, window):
        self.setupUi(window)
        self.signUpBtn.clicked.connect(self.signUp)
        self.enterBtn.clicked.connect(self.enter)
        self.exitBtn.clicked.connect(self.exit)
        
        



    def signUp(self):
        self.signUpWindow = QtWidgets.QMainWindow()
        self.signUpUi = Ui_signUpWindow()
        self.signUpUi.setupUi(self.signUpWindow)
        self.signUpWindow.show()

    



app = QtWidgets.QApplication(sys.argv)
signInWindow = QtWidgets.QMainWindow()

#Create an instance of our app
ui = budgetApp(signInWindow)

#show the window and start the app
signInWindow.show()
app.exec()